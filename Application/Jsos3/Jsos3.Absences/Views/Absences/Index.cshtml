@using Jsos3.Absences.Helpers
@using Jsos3.Absences.Infrastructure.Models
@using Jsos3.Absences.Models
@model Jsos3.Absences.ViewModels.AbsenceIndexViewModel
@{

}

<h1>Lista obecności grupy @Model.GroupId</h1>

<table class="table">
    <tr>
        <th>Indeks studenta</th>
        <th>Imię</th>
        <th>Nazwisko</th>
        @foreach (var date in Model.Days)
        {
            <th class="date-column">@date.ToString("dd/MM/yyyy")</th>
        }
    </tr>


    @foreach (var student in Model.StudentsInGroup)
    {
        <tr>
            <td class="index-row">@student.StudentId</td>
            <td>@student.Name</td>
            <td>@student.Surname</td>
            @foreach (var date in Model.Days)
            {
                var absence = Model.AbsenceOfStudents.GetValueOrDefault(new AbsenceKey(student.StudentId, date));

                @if (absence == default(StudentAbsenceDto))
                {
                    <td><input type="checkbox" class="absence-checkbox" data-student-id="@student.StudentId" data-date="@date.ToString("yyyy-MM-dd")" checked></td>
                }

                else
                {
                    <td><input type="checkbox" class="absence-checkbox" data-student-id="@student.StudentId" data-date="@date.ToString("yyyy-MM-dd")"></td>
                }

            }
        </tr>
    }
</table>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.absence-checkbox').forEach(function (checkbox) {
            checkbox.addEventListener('change', function () {
                var groupId = '@(Model.GroupId)';
                var isChecked = this.checked;
                var studentId = this.getAttribute('data-student-id');
                var date = this.getAttribute('data-date');

                fetch('/Absences/Get', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        GroupId: groupId,
                        StudentId: studentId,
                        Date: date,
                        IsChecked: isChecked
                    }),
                })
                    .then(response => response.json())
                    .then(data => {
                        // Handle the response if needed
                        console.log(data);
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });
        });

    });
</script>
